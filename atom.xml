<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>向本婷的个人博客</title>
  
  <subtitle>前端开发工程师</subtitle>
  <link href="https://pandarooster.github.com/atom.xml" rel="self"/>
  
  <link href="https://pandarooster.github.com/"/>
  <updated>2020-08-29T16:28:23.764Z</updated>
  <id>https://pandarooster.github.com/</id>
  
  <author>
    <name>向本婷</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于vue的eslint常出现的错误的解决办法</title>
    <link href="https://pandarooster.github.com/vue-eslinterror/"/>
    <id>https://pandarooster.github.com/vue-eslinterror/</id>
    <published>2020-08-26T05:40:28.000Z</published>
    <updated>2020-08-29T16:28:23.764Z</updated>
    
    <content type="html"><![CDATA[<p> 下载完vue之后，因为vue的eslint检查非常严格，只要格式不对就会报错，所以我把我经常遇到的坑还有错误总结了一下。</p><p>首先我们需要配置eslint的自动修复，这样你只要保存它就会自动修正代码格式，我用的代码编辑器是vscode,所以我在setting.json中加入了以下代码</p><pre class="line-numbers language-vscode的setting.json" data-language="vscode的setting.json"><code class="language-vscode的setting.json">&#123;    &#x2F;&#x2F; vscode默认启用了根据文件类型自动设置tabsize的选项    &quot;editor.detectIndentation&quot;: false,    &#x2F;&#x2F; 重新设定tabsize    &quot;editor.tabSize&quot;: 2,    &#x2F;&#x2F; #每次保存的时候自动格式化    &quot;editor.formatOnSave&quot;: true,    &#x2F;&#x2F; #每次保存的时候将代码按eslint格式进行修复    &quot;eslint.autoFixOnSave&quot;: true,    &#x2F;&#x2F; 添加 vue 支持    &quot;eslint.validate&quot;: [    &quot;javascript&quot;,    &quot;javascriptreact&quot;,    &#123;     &quot;language&quot;: &quot;vue&quot;,     &quot;autoFix&quot;: true    &#125;,    &quot;html&quot;,    &quot;vue&quot;,    ],    &#x2F;&#x2F; #让prettier使用eslint的代码格式进行校验    &quot;prettier.eslintIntegration&quot;: true,    &#x2F;&#x2F; #去掉代码结尾的分号    &quot;prettier.semi&quot;: false,    &#x2F;&#x2F; #使用带引号替代双引号    &quot;prettier.singleQuote&quot;: true,    &#x2F;&#x2F; #让函数(名)和后面的括号之间加个空格    &quot;javascript.format.insertSpaceBeforeFunctionParenthesis&quot;: true,    &#x2F;&#x2F; #让vue中的js按编辑器自带的ts格式进行格式化    &#x2F;&#x2F; &quot;vetur.format.defaultFormatter.js&quot;: &quot;vscode-typescript&quot;,    &quot;vetur.format.defaultFormatter.js&quot;: &quot;prettier-eslint&quot;,    &quot;vetur.format.defaultFormatterOptions&quot;: &#123;    &quot;js-beautify-html&quot;: &#123;     &quot;wrap_attributes&quot;: &quot;force-aligned&quot;     &#x2F;&#x2F; #vue组件中html代码格式化样式    &#125;    &#125;,    &quot;window.zoomLevel&quot;: 0,    &quot;explorer.confirmDelete&quot;: false,    &quot;explorer.confirmDragAndDrop&quot;: false,    &quot;editor.renderControlCharacters&quot;: true,    &quot;editor.renderWhitespace&quot;: &quot;all&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后把我们的vue根目录文件中的.eslint.js中的module.export换成这样一段代码</p><pre class="line-numbers language-vue中的.eslint.js" data-language="vue中的.eslint.js"><code class="language-vue中的.eslint.js">root: true,  parserOptions: &#123;      parser: &#39;babel-eslint&#39;  &#125;,  env: &#123;      browser: true  &#125;,  extends: [      &#x2F;&#x2F; https:&#x2F;&#x2F;github.com&#x2F;vuejs&#x2F;eslint-plugin-vue#priority-a-essential-error-prevention      &#x2F;&#x2F; consider switching to &#96;plugin:vue&#x2F;strongly-recommended&#96; or &#96;plugin:vue&#x2F;recommended&#96; for stricter rules.      &#39;plugin:vue&#x2F;essential&#39;,      &#x2F;&#x2F; https:&#x2F;&#x2F;github.com&#x2F;standard&#x2F;standard&#x2F;blob&#x2F;master&#x2F;docs&#x2F;RULES-en.md      &#39;standard&#39;  ],  &#x2F;&#x2F; required to lint *.vue files  plugins: [&#39;html&#39;],  &#x2F;&#x2F; add your custom rules here  rules: &#123;      &#x2F;&#x2F; allow async-await      &#39;no-console&#39;: &#39;off&#39;,      indent: [&#39;error&#39;, 2, &#123; SwitchCase: 1 &#125;],      semi: [&#39;error&#39;, &#39;always&#39;],      &#x2F;&#x2F; 三等号      &#39;eqeqeq&#39;: 0,      &#x2F;&#x2F; 强制在注释中 &#x2F;&#x2F; 或 &#x2F;* 使用一致的空格      &#39;spaced-comment&#39;: 0,      &#x2F;&#x2F; 关键字后面使用一致的空格      &#39;keyword-spacing&#39;: 0,      &#x2F;&#x2F; 强制在 function的左括号之前使用一致的空格      &#39;space-before-function-paren&#39;: 0,      &#x2F;&#x2F; 引号类型      &quot;quotes&quot;: [0, &quot;single&quot;],      &quot;vue&#x2F;no-parsing-error&quot;: [2, &#123; &quot;x-invalid-end-tag&quot;: false &#125;],      &#x2F;&#x2F; &#39;space-before-function-paren&#39;: [      &#x2F;&#x2F;     &#39;error&#39;,      &#x2F;&#x2F;     &#123; anonymous: &#39;always&#39;, named: &#39;never&#39; &#125;      &#x2F;&#x2F; ],      &#39;generator-star-spacing&#39;: &#39;off&#39;,      &#x2F;&#x2F; allow debugger during development      &#39;no-debugger&#39;: process.env.NODE_ENV &#x3D;&#x3D;&#x3D; &#39;production&#39; ? &#39;error&#39; : &#39;off&#39;      &#x2F;&#x2F; js语句结尾必须使用 ;  &#x2F;&#x2F; &#39;semi&#39;: [&#39;off&#39;, &#39;always&#39;],  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一个应该是最经常遇到的，我们的编辑器会报错，missing semicolon.意思就是缺少分号，这个时候只要我们在报错的地方后面加上分号就可以了。<br><img src="vue-eslinterror/image/sec.png" alt="alt"></p><p>第二个也是经常会遇到的，报错信息是这样的，说这个import只能用es6。<br><img src="vue-eslinterror/image/jshint6.png" alt="alt"></p><p>解决办法有两种，一种是在我们的报错页面加上这个语句</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//jshint esversion:6</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是这个只是局部引入，如果所有的页面都报这个错误的话，我们这样局部引入就要在每个页面都加上这个。这样非常繁琐，这就需要我们全局引入了，我们只需要在你创建的项目根目录建立一个.jshintrc文件，里面加入这样一段代码</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>    esversion<span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样的话所有页面会引入这个文件，可是还会出现这样的问题，就是你打开其他配置页面，有的页面用了use strict严格模式，有时候就会报错，这时候只需要把严格模式注释掉就好了</p><p>还有就是在我们的index.js文件里面最后一行会报错说有语法问题，此时只需要回车</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 下载完vue之后，因为vue的eslint检查非常严格，只要格式不对就会报错，所以我把我经常遇到的坑还有错误总结了一下。&lt;/p&gt;
&lt;p&gt;首先我们需要配置eslint的自动修复，这样你只要保存它就会自动修正代码格式，我用的代码编辑器是vscode,所以我在setting.j</summary>
      
    
    
    
    
    <category term="vue的eslint" scheme="https://pandarooster.github.com/tags/vue%E7%9A%84eslint/"/>
    
  </entry>
  
  <entry>
    <title>404</title>
    <link href="https://pandarooster.github.com/404/"/>
    <id>https://pandarooster.github.com/404/</id>
    <published>2020-08-22T08:41:10.000Z</published>
    <updated>2020-08-29T15:04:12.782Z</updated>
    
    
    <summary type="html">你来到了没有知识的荒原</summary>
    
    
    
    
  </entry>
  
</feed>
